name: Linux build

on:
  workflow_dispatch:
  workflow_call:

jobs:
  linuxbuild:
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    name: Build on Linux
    strategy:
      matrix:
        arch: [x86-64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up QEMU
        if: ${{ matrix.arch == 'arm64' }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Prepare environment x86-64
        if: ${{ matrix.arch == 'x86-64' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential upx-ucl cmake libssl-dev libkrb5-dev
          sudo ldconfig
      - name: Build x86-64
        if: ${{ matrix.arch == 'x86-64' }}
        run: |
          ./build.linux.sh
      - name: Prepare and build arm
        if: ${{ matrix.arch == 'arm64' }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu22.04
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/bin:/artifacts"
            --platform linux/arm64
          install: |
            apt-get update
            apt-get install -y --no-install-recommends build-essential upx-ucl cmake libssl-dev libkrb5-dev
            ldconfig
          run: |
            ./build.linux.sh
            # cp bin/n2os_smb_client.linux* /artifacts/
      - name: Store executable
        uses: actions/upload-artifact@v3
        with:
          name: "n2os_smb_client.linux_${{ matrix.arch }}"
          path: bin/n2os_smb_client.linux*
