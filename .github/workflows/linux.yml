name: Linux build

on:
  workflow_dispatch:
  workflow_call:

env:
  IMG_TAG: smblinux-builder:latest

jobs:
  linuxsetup:
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    name: Setup build on Linux
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Create an artifacts directory
        run: |
          mkdir -p "${PWD}/artifacts"

  linuxfetch:
    needs: "linuxsetup"
    runs-on: ubuntu-22.04
    name: Build on Linux
    strategy:
      matrix:
        arch:
          - name: x86-64
            platform: linux/amd64
            bin_name: n2os_smb_client.linux
            artifact: n2os_smb_client.linux_x86-64
          - name: arm64
            platform: linux/arm64
            bin_name: n2os_smb_client.linux_arm64
            artifact: n2os_smb_client.linux_arm64
    steps:
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.arch.platform }}
          file: ./Dockerfile.linux
          target: builder
          load: true
          push: false
          tags: ${{ env.IMG_TAG }}
      - name: Fetch executable from the container
        run: |
          docker run --platform ${{ matrix.arch.platform }} --rm --volume "${PWD}/artifacts:/artifacts" ${{ env.IMG_TAG }} cp /usr/src/n2os-smb-client/bin/${{ matrix.arch.bin_name }} /artifacts
      - name: Store executable
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch.artifact }}
          path: ${PWD}/artifacts/${{ matrix.arch.bin_name }}
