name: Linux build

on:
  workflow_dispatch:
  workflow_call:

env:
  IMG_TAG: smblinux-builder:latest

jobs:
  linuxbuild:
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    name: Build on Linux
    # strategy:
    #   matrix:
    #     arch: [x86-64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile.linux
          target: builder
          load: true
          push: false
          tags: ${{ env.IMG_TAG }}
      - name: Create an artifacts directory
        run: |
          mkdir -p "${PWD}/artifacts"
      - name: Fetch arm executable
        run: |
          docker run --platform linux/arm64 --rm --volume "${PWD}/artifacts:/artifacts" ${{ env.IMG_TAG }} cp /usr/src/n2os-smb-client/bin/n2os_smb_client.linux_arm64 /artifacts  
      - name: Fetch x86-64 executable
        run: |
          docker run  --platform linux/amd64 --rm --volume "${PWD}/artifacts:/artifacts" ${{ env.IMG_TAG }} cp /usr/src/n2os-smb-client/bin/n2os_smb_client.linux /artifacts 
      - name: Store executable arm64
        uses: actions/upload-artifact@v3
        with:
          name: "n2os_smb_client.linux_arm64"
          path: bin/n2os_smb_client.linux_arm64
      - name: Store executable x86-64
        uses: actions/upload-artifact@v3
        with:
          name: "n2os_smb_client.linux_x86-64"
          path: bin/n2os_smb_client.linux
